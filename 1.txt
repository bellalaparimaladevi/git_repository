import { Component, OnInit, OnChanges, SimpleChanges, Input } from '@angular/core';
import { GithubService } from '../github.service';

@Component({
  selector: 'view-component',
  templateUrl: './view.component.html',
  styleUrls: ['./view.component.scss'],
  providers: [GithubService],
})
export class ViewComponent implements OnInit, OnChanges {
  @Input() userName: string = ''; // Accept userName as an input property
  message: string = 'Welcome to GitHub user search!';
  response: any = null;
  recentSearches: string[] = [];
  filteredSearches: string[] = [];
  showSuggestions: boolean = false;

  constructor(private githubService: GithubService) {}

  ngOnInit(): void {
    console.log('ViewComponent initialized.');
  }

  ngOnChanges(changes: SimpleChanges): void {
    if (changes['userName'] && this.userName.trim()) {
      this.updateRecentSearches();
    }
  }

  search(): void {
    if (!this.userName.trim()) {
      alert('Please enter a valid username!');
      return;
    }

    this.githubService.getUser(this.userName).subscribe(
      (data: any) => {
        this.response = data;

        if (!this.recentSearches.includes(this.userName)) {
          this.recentSearches.push(this.userName);
        }

        if (this.recentSearches.length > 5) {
          this.recentSearches.shift();
        }
      },
      (error: any) => {
        alert('User not found or an error occurred!');
        this.response = null;
      }
    );
  }

  updateRecentSearches(): void {
    this.filteredSearches = this.recentSearches.filter((search) =>
      search.toLowerCase().includes(this.userName.toLowerCase())
    );
  }

  selectRecentSearch(search: string): void {
    console.log('Recent search selected:', search);
    this.userName = search;
    this.showSuggestions = false;
    this.search();
  }

  hideSuggestions(): void {
    setTimeout(() => (this.showSuggestions = false), 100);
  }
}
