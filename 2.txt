import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { Router } from '@angular/router';
import { AuthService } from '../auth.service'; // Ensure to create and import the AuthService

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css'] // Add your CSS styles here
})
export class LoginComponent implements OnInit {
  loginForm: FormGroup;
  errorMessage: string | null = null;

  constructor(
    private formBuilder: FormBuilder,
    private authService: AuthService,
    private router: Router
  ) {
    this.loginForm = this.formBuilder.group({
      userEmail: ['', [Validators.required, Validators.email]],
      password: ['', [Validators.required]]
    });
  }

  ngOnInit(): void {
    // Optionally, check if the user is already logged in and redirect
    if (localStorage.getItem('token')) {
      this.router.navigate(['/dashboard']); // Redirect to dashboard if already logged in
    }
  }

  onSubmit() {
    if (this.loginForm.invalid) {
      return;
    }

    const loginData = this.loginForm.value; // Using plain object instead of DTO

    this.authService.login(loginData).subscribe({
      next: (response) => { // No DTO type here
        // Store the token in localStorage
        localStorage.setItem('token', response.token);
        // Navigate to the dashboard or protected route
        this.router.navigate(['/dashboard']);
      },
      error: (error) => {
        this.errorMessage = 'Invalid email or password';
        console.error('Login error', error);
      }
    });
  }
}
