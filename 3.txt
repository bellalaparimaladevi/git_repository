package yg.bootcamp.demo.employeedetails;

import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import java.util.Arrays;
import java.util.List;

public class EmployeeDetailsServiceTest {

    @Mock
    private EmployeeDetailsRepository repository;

    @InjectMocks
    private EmployeeDetailsService employeeDetailsService;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    void testGetAllEmployeeDetails() {
        EmployeeDetails emp1 = new EmployeeDetails(); // Initialize with required fields
        EmployeeDetails emp2 = new EmployeeDetails(); // Initialize with required fields

        when(repository.findAll()).thenReturn(Arrays.asList(emp1, emp2));

        Iterable<EmployeeDetails> employeeDetails = employeeDetailsService.getAllEmployeeDetails();

        assertNotNull(employeeDetails);
        assertEquals(2, ((List<EmployeeDetails>) employeeDetails).size());
        verify(repository, times(1)).findAll();
    }

    @Test
    void testAddNewEmployeeDetails() {
        EmployeeDetails employeeDetails = new EmployeeDetails(); // Initialize with required fields

        doNothing().when(repository).save(employeeDetails);

        employeeDetailsService.addNewEmployeeDetails(employeeDetails);

        verify(repository, times(1)).save(employeeDetails);
    }
}
