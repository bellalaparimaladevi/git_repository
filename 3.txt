import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.http.ResponseEntity;
import yg.bootcamp.demo.jobdetails.JobDetails;
import yg.bootcamp.demo.jobdetails.JobDetailsService;

import java.util.List;
import java.util.Optional;

class JobDetailsControllerTest {

    @Mock
    private JobDetailsService service;

    @InjectMocks
    private JobDetailsController controller;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    void testGetAllJobDetails() {
        // Given
        List<JobDetails> jobDetailsList = List.of(new JobDetails(), new JobDetails());
        when(service.getAllJobDetails()).thenReturn(jobDetailsList);

        // When
        Iterable<JobDetails> result = controller.getAllJobDetails();

        // Then
        assertEquals(jobDetailsList, result);
        verify(service).getAllJobDetails();
    }

    @Test
    void testAddNewJobDetail() {
        // Given
        JobDetails jobDetails = new JobDetails();

        // When
        controller.addNewJobDetail(jobDetails);

        // Then
        verify(service).addNewJobDetail(jobDetails);
    }

    @Test
    void testDeleteJobDetailsById() {
        // Given
        Integer jobId = 1;

        // When
        controller.deleteJobDetailsById(jobId);

        // Then
        verify(service).deleteJobDetailsById(jobId);
    }

    @Test
    void testGetJobDetailsByJobType() {
        // Given
        String jobType = "Developer";
        List<JobDetails> jobDetailsList = List.of(new JobDetails(), new JobDetails());
        when(service.getJobDetailsByJobType(jobType)).thenReturn(jobDetailsList);

        // When
        List<JobDetails> result = controller.getJobDetailsByJobType(jobType);

        // Then
        assertEquals(jobDetailsList, result);
        verify(service).getJobDetailsByJobType(jobType);
    }

    @Test
    void testGetJobDetailsByJobRole() {
        // Given
        String jobRole = "Backend Developer";
        List<JobDetails> jobDetailsList = List.of(new JobDetails(), new JobDetails());
        when(service.getJobDetailsByJobRole(jobRole)).thenReturn(jobDetailsList);

        // When
        List<JobDetails> result = controller.getJobDetailsByJobRole(jobRole);

        // Then
        assertEquals(jobDetailsList, result);
